
Details

    checked Valid go.mod file
    checked Redistributable license
    unchecked Tagged version
    unchecked Stable version
    Learn more

Repository
github.com/chenhg5/collection

README ¶
Go Collection

golang GoDoc license Build Status

Collection provides a fluent, convenient wrapper for working with arrays of data.

You can easily convert a map or an array into a Collection with the method Collect(). And then you can use the powerful and graceful apis of Collection to process the data.

In general, Collection are immutable, meaning every Collection method returns an entirely new Collection instance
doc

here
example

a := []int{2,3,4,5,6,7}

Collect(a).Each(func(item, value interface{}) (interface{}, bool) {
    return value.(decimal.Decimal).IntPart() + 2, false
}).ToIntArray()

// []int{4,5,6,7,8,9}

b := []map[string]interface{}{
    {"name": "Jack", "sex": 0},
    {"name": "Mary", "sex": 1},
    {"name": "Jane", "sex": 1},
}

Collect(b).Where("name", "Jack").ToMapArray()[0]

// map[string]interface{}{"name": "Jack", "sex": 0}

more examples
contribution

pr is very welcome.
Documentation ¶
Index ¶

    type BaseCollection
        func (c BaseCollection) All() []interface{}
        func (c BaseCollection) Avg(key ...string) decimal.Decimal
        func (c BaseCollection) Chunk(num int) MultiDimensionalArrayCollection
        func (c BaseCollection) Collapse() Collection
        func (c BaseCollection) Combine(value []interface{}) Collection
        func (c BaseCollection) Concat(value interface{}) Collection
        func (c BaseCollection) Contains(value ...interface{}) bool
        func (c BaseCollection) Count() int
        func (c BaseCollection) CountBy(callback ...interface{}) map[interface{}]int
        func (c BaseCollection) CrossJoin(array ...[]interface{}) MultiDimensionalArrayCollection
        func (c BaseCollection) Dd()
        func (c BaseCollection) Diff(interface{}) Collection
        func (c BaseCollection) DiffAssoc(map[string]interface{}) Collection
        func (c BaseCollection) DiffKeys(map[string]interface{}) Collection
        func (c BaseCollection) Dump()
        func (c BaseCollection) Each(func(item, value interface{}) (interface{}, bool)) Collection
        func (c BaseCollection) Every(CB) bool
        func (c BaseCollection) Except([]string) Collection
        func (c BaseCollection) Filter(CB) Collection
        func (c BaseCollection) First(...CB) interface{}
        func (c BaseCollection) FirstWhere(key string, values ...interface{}) map[string]interface{}
        func (c BaseCollection) FlatMap(func(value interface{}) interface{}) Collection
        func (c BaseCollection) Flip() Collection
        func (c BaseCollection) ForPage(int, int) Collection
        func (c BaseCollection) Forget(string) Collection
        func (c BaseCollection) Get(string, ...interface{}) interface{}
        func (c BaseCollection) GroupBy(string) Collection
        func (c BaseCollection) Has(...string) bool
        func (c BaseCollection) Implode(string, string) string
        func (c BaseCollection) Intersect([]string) Collection
        func (c BaseCollection) IntersectByKeys(map[string]interface{}) Collection
        func (c BaseCollection) IsEmpty() bool
        func (c BaseCollection) IsNotEmpty() bool
        func (c BaseCollection) Join(delimiter string) string
        func (c BaseCollection) KeyBy(interface{}) Collection
        func (c BaseCollection) Keys() Collection
        func (c BaseCollection) Last(...CB) interface{}
        func (c BaseCollection) Length() int
        func (c BaseCollection) MapToGroups(MapCB) Collection
        func (c BaseCollection) MapWithKeys(MapCB) Collection
        func (c BaseCollection) Max(key ...string) decimal.Decimal
        func (c BaseCollection) Median(key ...string) decimal.Decimal
        func (c BaseCollection) Merge(interface{}) Collection
        func (c BaseCollection) Min(key ...string) decimal.Decimal
        func (c BaseCollection) Mode(key ...string) []interface{}
        func (c BaseCollection) Nth(...int) Collection
        func (c BaseCollection) Only(keys []string) Collection
        func (c BaseCollection) Pad(int, interface{}) Collection
        func (c BaseCollection) Partition(PartCB) (Collection, Collection)
        func (c BaseCollection) Pluck(key string) Collection
        func (c BaseCollection) Pop() interface{}
        func (c BaseCollection) Prepend(values ...interface{}) Collection
        func (c BaseCollection) Pull(key interface{}) Collection
        func (c BaseCollection) Push(interface{}) Collection
        func (c BaseCollection) Put(key string, value interface{}) Collection
        func (c BaseCollection) Random(...int) Collection
        func (c BaseCollection) Reduce(ReduceCB) interface{}
        func (c BaseCollection) Reject(CB) Collection
        func (c BaseCollection) Reverse() Collection
        func (c BaseCollection) Search(interface{}) int
        func (c BaseCollection) Select(keys ...string) Collection
        func (c BaseCollection) Shift() Collection
        func (c BaseCollection) Shuffle() Collection
        func (c BaseCollection) Slice(...int) Collection
        func (c BaseCollection) Sort() Collection
        func (c BaseCollection) SortBy(key string) Collection
        func (c BaseCollection) SortByDesc() Collection
        func (c BaseCollection) Splice(index ...int) Collection
        func (c BaseCollection) Split(int) Collection
        func (c BaseCollection) Sum(key ...string) decimal.Decimal
        func (c BaseCollection) Take(num int) Collection
        func (c BaseCollection) ToInt64Array() []int64
        func (c BaseCollection) ToIntArray() []int
        func (c BaseCollection) ToJson() string
        func (c BaseCollection) ToMap() map[string]interface{}
        func (c BaseCollection) ToMapArray() []map[string]interface{}
        func (c BaseCollection) ToMultiDimensionalArray() [][]interface{}
        func (c BaseCollection) ToNumberArray() []decimal.Decimal
        func (c BaseCollection) ToStringArray() []string
        func (c BaseCollection) ToStruct(dist interface{})
        func (c BaseCollection) Unique() Collection
        func (c BaseCollection) Value() interface{}
        func (c BaseCollection) Where(key string, values ...interface{}) Collection
        func (c BaseCollection) WhereIn(string, []interface{}) Collection
        func (c BaseCollection) WhereNotIn(string, []interface{}) Collection
    type CB
    type Collection
        func Collect(src interface{}) Collection
    type FilterFun
    type MapArrayCollection
        func (c MapArrayCollection) All() []interface{}
        func (c MapArrayCollection) Avg(key ...string) decimal.Decimal
        func (c MapArrayCollection) Chunk(num int) MultiDimensionalArrayCollection
        func (c MapArrayCollection) Concat(value interface{}) Collection
        func (c MapArrayCollection) CrossJoin(array ...[]interface{}) MultiDimensionalArrayCollection
        func (c MapArrayCollection) Dd()
        func (c MapArrayCollection) Dump()
        func (c MapArrayCollection) Each(cb func(item, value interface{}) (interface{}, bool)) Collection
        func (c MapArrayCollection) Every(cb CB) bool
        func (c MapArrayCollection) Filter(cb CB) Collection
        func (c MapArrayCollection) First(cbs ...CB) interface{}
        func (c MapArrayCollection) FirstWhere(key string, values ...interface{}) map[string]interface{}
        func (c MapArrayCollection) GroupBy(k string) Collection
        func (c MapArrayCollection) Implode(key string, delimiter string) string
        func (c MapArrayCollection) IsEmpty() bool
        func (c MapArrayCollection) IsNotEmpty() bool
        func (c MapArrayCollection) KeyBy(v interface{}) Collection
        func (c MapArrayCollection) Last(cbs ...CB) interface{}
        func (c MapArrayCollection) Length() int
        func (c MapArrayCollection) MapToGroups(cb MapCB) Collection
        func (c MapArrayCollection) MapWithKeys(cb MapCB) Collection
        func (c MapArrayCollection) Max(key ...string) decimal.Decimal
        func (c MapArrayCollection) Median(key ...string) decimal.Decimal
        func (c MapArrayCollection) Min(key ...string) decimal.Decimal
        func (c MapArrayCollection) Mode(key ...string) []interface{}
        func (c MapArrayCollection) Only(keys []string) Collection
        func (c MapArrayCollection) Partition(cb PartCB) (Collection, Collection)
        func (c MapArrayCollection) Pluck(key string) Collection
        func (c MapArrayCollection) Pop() interface{}
        func (c MapArrayCollection) Prepend(values ...interface{}) Collection
        func (c MapArrayCollection) Push(v interface{}) Collection
        func (c MapArrayCollection) Random(num ...int) Collection
        func (c MapArrayCollection) Reduce(cb ReduceCB) interface{}
        func (c MapArrayCollection) Reject(cb CB) Collection
        func (c MapArrayCollection) Reverse() Collection
        func (c MapArrayCollection) Search(v interface{}) int
        func (c MapArrayCollection) Select(keys ...string) Collection
        func (c MapArrayCollection) Shift() Collection
        func (c MapArrayCollection) Shuffle() Collection
        func (c MapArrayCollection) Slice(keys ...int) Collection
        func (c MapArrayCollection) Splice(index ...int) Collection
        func (c MapArrayCollection) Split(num int) Collection
        func (c MapArrayCollection) Sum(key ...string) decimal.Decimal
        func (c MapArrayCollection) Take(num int) Collection
        func (c MapArrayCollection) ToJson() string
        func (c MapArrayCollection) ToMapArray() []map[string]interface{}
        func (c MapArrayCollection) ToStruct(dist interface{})
        func (c MapArrayCollection) Where(key string, values ...interface{}) Collection
        func (c MapArrayCollection) WhereIn(key string, in []interface{}) Collection
        func (c MapArrayCollection) WhereNotIn(key string, in []interface{}) Collection
    type MapCB
    type MapCollection
        func (c MapCollection) Contains(value ...interface{}) bool
        func (c MapCollection) Dd()
        func (c MapCollection) DiffAssoc(m map[string]interface{}) Collection
        func (c MapCollection) DiffKeys(m map[string]interface{}) Collection
        func (c MapCollection) Dump()
        func (c MapCollection) Each(cb func(item, value interface{}) (interface{}, bool)) Collection
        func (c MapCollection) Every(cb CB) bool
        func (c MapCollection) Except(keys []string) Collection
        func (c MapCollection) FlatMap(cb func(value interface{}) interface{}) Collection
        func (c MapCollection) Flip() Collection
        func (c MapCollection) Forget(k string) Collection
        func (c MapCollection) Get(k string, v ...interface{}) interface{}
        func (c MapCollection) Has(keys ...string) bool
        func (c MapCollection) IntersectByKeys(m map[string]interface{}) Collection
        func (c MapCollection) IsEmpty() bool
        func (c MapCollection) IsNotEmpty() bool
        func (c MapCollection) Keys() Collection
        func (c MapCollection) Merge(i interface{}) Collection
        func (c MapCollection) Only(keys []string) Collection
        func (c MapCollection) Prepend(values ...interface{}) Collection
        func (c MapCollection) Select(keys ...string) Collection
        func (c MapCollection) ToJson() string
        func (c MapCollection) ToMap() map[string]interface{}
        func (c MapCollection) ToStruct(dist interface{})
    type MultiDimensionalArrayCollection
        func (c MultiDimensionalArrayCollection) Collapse() Collection
        func (c MultiDimensionalArrayCollection) Concat(value interface{}) Collection
        func (c MultiDimensionalArrayCollection) Dd()
        func (c MultiDimensionalArrayCollection) Dump()
        func (c MultiDimensionalArrayCollection) ToJson() string
        func (c MultiDimensionalArrayCollection) ToMultiDimensionalArray() [][]interface{}
        func (c MultiDimensionalArrayCollection) Value() interface{}
    type NumberArrayCollection
        func (c NumberArrayCollection) All() []interface{}
        func (c NumberArrayCollection) Avg(key ...string) decimal.Decimal
        func (c NumberArrayCollection) Chunk(num int) MultiDimensionalArrayCollection
        func (c NumberArrayCollection) Concat(value interface{}) Collection
        func (c NumberArrayCollection) Contains(value ...interface{}) bool
        func (c NumberArrayCollection) CountBy(callback ...interface{}) map[interface{}]int
        func (c NumberArrayCollection) CrossJoin(array ...[]interface{}) MultiDimensionalArrayCollection
        func (c NumberArrayCollection) Dd()
        func (c NumberArrayCollection) Diff(m interface{}) Collection
        func (c NumberArrayCollection) Dump()
        func (c NumberArrayCollection) Each(cb func(item, value interface{}) (interface{}, bool)) Collection
        func (c NumberArrayCollection) Every(cb CB) bool
        func (c NumberArrayCollection) Filter(cb CB) Collection
        func (c NumberArrayCollection) First(cbs ...CB) interface{}
        func (c NumberArrayCollection) ForPage(page, size int) Collection
        func (c NumberArrayCollection) IsEmpty() bool
        func (c NumberArrayCollection) IsNotEmpty() bool
        func (c NumberArrayCollection) Last(cbs ...CB) interface{}
        func (c NumberArrayCollection) Length() int
        func (c NumberArrayCollection) Max(key ...string) decimal.Decimal
        func (c NumberArrayCollection) Median(key ...string) decimal.Decimal
        func (c NumberArrayCollection) Merge(i interface{}) Collection
        func (c NumberArrayCollection) Min(key ...string) decimal.Decimal
        func (c NumberArrayCollection) Mode(key ...string) []interface{}
        func (c NumberArrayCollection) Pad(num int, value interface{}) Collection
        func (c NumberArrayCollection) Partition(cb PartCB) (Collection, Collection)
        func (c NumberArrayCollection) Pop() interface{}
        func (c NumberArrayCollection) Prepend(values ...interface{}) Collection
        func (c NumberArrayCollection) Push(v interface{}) Collection
        func (c NumberArrayCollection) Random(num ...int) Collection
        func (c NumberArrayCollection) Reduce(cb ReduceCB) interface{}
        func (c NumberArrayCollection) Reject(cb CB) Collection
        func (c NumberArrayCollection) Reverse() Collection
        func (c NumberArrayCollection) Search(v interface{}) int
        func (c NumberArrayCollection) Shift() Collection
        func (c NumberArrayCollection) Shuffle() Collection
        func (c NumberArrayCollection) Slice(keys ...int) Collection
        func (c NumberArrayCollection) Sort() Collection
        func (c NumberArrayCollection) SortByDesc() Collection
        func (c NumberArrayCollection) Splice(index ...int) Collection
        func (c NumberArrayCollection) Split(num int) Collection
        func (c NumberArrayCollection) Sum(key ...string) decimal.Decimal
        func (c NumberArrayCollection) Take(num int) Collection
        func (c NumberArrayCollection) ToInt64Array() []int64
        func (c NumberArrayCollection) ToIntArray() []int
        func (c NumberArrayCollection) ToJson() string
        func (c NumberArrayCollection) ToNumberArray() []decimal.Decimal
        func (c NumberArrayCollection) Unique() Collection
    type PartCB
    type ReduceCB
    type StringArrayCollection
        func (c StringArrayCollection) All() []interface{}
        func (c StringArrayCollection) Chunk(num int) MultiDimensionalArrayCollection
        func (c StringArrayCollection) Combine(value []interface{}) Collection
        func (c StringArrayCollection) Concat(value interface{}) Collection
        func (c StringArrayCollection) Contains(value ...interface{}) bool
        func (c StringArrayCollection) CountBy(callback ...interface{}) map[interface{}]int
        func (c StringArrayCollection) CrossJoin(array ...[]interface{}) MultiDimensionalArrayCollection
        func (c StringArrayCollection) Dd()
        func (c StringArrayCollection) Diff(m interface{}) Collection
        func (c StringArrayCollection) Dump()
        func (c StringArrayCollection) Each(cb func(item, value interface{}) (interface{}, bool)) Collection
        func (c StringArrayCollection) Every(cb CB) bool
        func (c StringArrayCollection) Filter(cb CB) Collection
        func (c StringArrayCollection) First(cbs ...CB) interface{}
        func (c StringArrayCollection) ForPage(page, size int) Collection
        func (c StringArrayCollection) Intersect(keys []string) Collection
        func (c StringArrayCollection) IsEmpty() bool
        func (c StringArrayCollection) IsNotEmpty() bool
        func (c StringArrayCollection) Join(delimiter string) string
        func (c StringArrayCollection) Last(cbs ...CB) interface{}
        func (c StringArrayCollection) Length() int
        func (c StringArrayCollection) Merge(i interface{}) Collection
        func (c StringArrayCollection) Mode(key ...string) []interface{}
        func (c StringArrayCollection) Pad(num int, value interface{}) Collection
        func (c StringArrayCollection) Partition(cb PartCB) (Collection, Collection)
        func (c StringArrayCollection) Pop() interface{}
        func (c StringArrayCollection) Prepend(values ...interface{}) Collection
        func (c StringArrayCollection) Push(v interface{}) Collection
        func (c StringArrayCollection) Random(num ...int) Collection
        func (c StringArrayCollection) Reduce(cb ReduceCB) interface{}
        func (c StringArrayCollection) Reject(cb CB) Collection
        func (c StringArrayCollection) Reverse() Collection
        func (c StringArrayCollection) Search(v interface{}) int
        func (c StringArrayCollection) Shift() Collection
        func (c StringArrayCollection) Shuffle() Collection
        func (c StringArrayCollection) Slice(keys ...int) Collection
        func (c StringArrayCollection) Splice(index ...int) Collection
        func (c StringArrayCollection) Split(num int) Collection
        func (c StringArrayCollection) Take(num int) Collection
        func (c StringArrayCollection) ToJson() string
        func (c StringArrayCollection) ToStringArray() []string
        func (c StringArrayCollection) Unique() Collection

Examples ¶

    BaseCollection.All
    BaseCollection.Avg
    BaseCollection.Chunk
    BaseCollection.Diff
    BaseCollection.Each
    BaseCollection.Every
    BaseCollection.Except
    BaseCollection.Filter
    BaseCollection.First
    BaseCollection.FirstWhere
    BaseCollection.FlatMap
    BaseCollection.Flip
    BaseCollection.ForPage
    BaseCollection.Forget
    BaseCollection.Get
    BaseCollection.GroupBy
    BaseCollection.Has
    BaseCollection.Implode
    BaseCollection.Intersect
    BaseCollection.IntersectByKeys
    BaseCollection.IsEmpty
    BaseCollection.IsNotEmpty
    BaseCollection.Join
    BaseCollection.KeyBy
    BaseCollection.Keys
    BaseCollection.Last
    BaseCollection.Length
    BaseCollection.Median
    BaseCollection.Merge
    BaseCollection.Mode
    BaseCollection.Pad
    BaseCollection.Partition
    BaseCollection.Pop
    BaseCollection.Push
    BaseCollection.Random
    BaseCollection.Reduce
    BaseCollection.Reject
    BaseCollection.Reverse
    BaseCollection.Search
    BaseCollection.Select
    BaseCollection.Shift
    BaseCollection.Shuffle
    BaseCollection.Slice
    BaseCollection.Sort
    BaseCollection.SortByDesc
    BaseCollection.Splice
    BaseCollection.Split
    BaseCollection.Sum
    BaseCollection.Take
    BaseCollection.ToIntArray
    BaseCollection.ToJson
    BaseCollection.ToMap
    BaseCollection.ToMapArray
    BaseCollection.ToNumberArray
    BaseCollection.ToStringArray
    BaseCollection.ToStruct
    BaseCollection.Unique
    BaseCollection.Where
    BaseCollection.WhereIn
    BaseCollection.WhereNotIn

